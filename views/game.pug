doctype html
head
    meta(http-equiv='Content-Type' content='text/html; charset=utf-8')
    
    title Online Multiplayer Game
    
    // Js
    script(src="/socket.io/socket.io.js")
    script(src="/javascripts/jquery.min.js")
    script(src='/javascripts/babylon.js')
    script(src='/javascripts/babylon.gui.min.js')
    script(src="/javascripts/socket.js")
    script(src="/javascripts/Player.js")

    style.
        html, body {
            overflow: hidden;
            width: 100%;
            height: 100%;
            margin: 0;
            padding: 0;
        }
        #renderCanvas {
            width: 100%;
            height: 100%;
            touch-action: none;
        }
        
        
canvas#renderCanvas(onmousemove='crossReset()', canvas='')

script.
    const data = !{values};
    var line1,line2,line3,line4,xc=750,yc=375,zc,camera,crossMove=false,i=0,crossRecoil,crouch=0;
    var boundry1,boundry2,boundry3,boundry4,brick1,brick2,brick3,brick4,cbrick1,cbrick2,ground;
    var advancedTexture;
    var sid;
    var rayHelper;
    const socketIO = io.connect('/dynamic-' + data["no"])
    const playerObjects = new Array();
    var me;

    function uuidv4() {
    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
            var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);
            return v.toString(16);
        });
    }
    var id = uuidv4();
    me = new Player(data['name'],id)
   
     

script(src="/javascripts/game.js")

script.
    socket(data["name"],socketIO)
    